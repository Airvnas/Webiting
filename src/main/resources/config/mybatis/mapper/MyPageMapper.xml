<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.user.mapper.MyPageMapper">

	<!-- 관심 목록 -->
	<select id="selectLikeAllPaging" resultType="Like" parameterType="Paging">
		select * from
		(select row_number() over(order by lindate desc) rn, likeprod.* 
		from likeprod)
		<![CDATA[
		where rn > #{start} and rn < #{end} and idx=#{idx}
		]]>
	</select>
	<!-- 해당 회원 정보만 가져오게끔하려면 맨 끝에 and idx=#{idx} 추가 -->
	
	<select id="getTotalCount" resultType="int">
		select count(pnum) from likeprod
	</select>
	
	<delete id="deleteLike" parameterType="int">
		delete from likeprod where idx=#{idx} and pnum=#{pnum}
	</delete>
	
	<!-- 장바구니 -->
	<insert id="moveCart" parameterType="Cart" useGeneratedKeys="true" keyProperty="cartNum">
		<selectKey keyProperty="cartNum" resultType="_int" order="BEFORE">
			select cart_seq.nextval from dual
		</selectKey>
		insert into cart(cartnum, idx_fk, pnum_fk, oqty, indate)
		values (#{cartNum}, #{idx_fk}, #{pnum_fk}, 1, sysdate)
	</insert>
	
	<!-- 장바구니 View를 만들어서 가져오자 -->
	<select id="selectCartView" resultType="Cart" parameterType="_int">
		select * from cartView where idx_fk=#{value}
	</select>
	
	<!-- 
		create or replace view cartview as
		select c.*,p.pname,pimage1,price, saleprice, point, 
		(c.oqty*p.saleprice) totalPrice, (c.oqty*p.point) totalPoint
		from cart c join product p
		on c.pnum_fk = p.pnum;
	 -->
	
	<!-- 장바구니 총액 가져오기 -->
	<select id="getCartTotal" resultType="Cart" parameterType="_int">
		select sum(totalPrice) cartTotalPrice, sum(totalPoint) cartTotalPoint
		from cartView where idx_fk=#{value}
	</select>
	
	<delete id="delCart" parameterType="_int">
		delete from cart where cartNum=#{value}
	</delete>
	
	<update id="updateCartQty" parameterType="Cart">
		update cart set
		oqty=oqty+ #{oqty}
		where idx_fk=#{idx_fk} and pnum_fk=#{pnum_fk}
	</update>
	
	<update id="editCart" parameterType="Cart">
		update cart set oqty=#{oqty} where cartNum=#{cartNum}	
	</update>
	
	<!--  주문 목록 
	<insert id="goOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="onum">
		<selectKey keyProperty="onum" resultType="String" order="BEFORE">
			select onum_seq.nextval from dual
		</selectKey>
		insert into order_product(onum, pnum, idx)
		values (sysdate||#{pnum}||#{onum}, #{pnum}, #{idx})
	</insert> -->
	
	<!-- <insert id="goOrder_old" parameterType="Order" useGeneratedKeys="true" keyProperty="onum">
		<selectKey keyProperty="onum" resultType="String" order="BEFORE">
			select onum_seq.nextval from dual
		</selectKey>
		insert into order_product(onum, pnum, idx)
		values (#{onum}, #{pnum}, #{idx})
	</insert> -->
	
	<!-- <select id="selectOrderView" resultType="Order" parameterType="_int">
		select * from orderView where idx=#{value}
	</select> -->
	<!-- 
		create or replace view orderview as
		select o.onum, o.pnum, o.idx ,c.pname, c.pimage1, c.price, c.saleprice, c.point, 
		(c.oqty*c.saleprice) totalPrice, (c.oqty*c.point) totalPoint
		from order_product o join cartview c
		on o.pnum = c.pnum_fk;
	 -->
	
	<!-- <select id="getOrderTotal" resultType="Order" parameterType="_int">
		select sum(totalPrice) orderTotalPrice, sum(totalPoint) orderTotalPoint
		from orderView where idx=#{value}
	</select> -->
	
	<select id="selectCartCountByPnum" resultType="int" parameterType="Cart">
		select cartNum from cart
		where idx_fk=#{idx_fk} and pnum_fk=#{pnum_fk}
	</select>
</mapper>