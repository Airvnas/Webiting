@PostMapping(value="/orderedInsert",produces="application/json")
	@ResponseBody
	public OrderedVO orderedInsert(@RequestBody OrderedVO vo,HttpSession session) {
		log.info("js에서 받은 vo ====================>"+vo);
		UserVO loginUser=(UserVO) session.getAttribute("loginUser");
		/////////////////////////////////////////////////
		//결제정보만 얻어오기
		OrderVO ovo = new OrderVO();
		ovo.setTitle(vo.getTitle());
		ovo.setOrdered_no(vo.getOrdered_no());
		ovo.setOrdered_orderprice(vo.getOrdered_orderprice());
		ovo.setOrdered_payhow(vo.getOrdered_payhow());
		ovo.setOrdered_paystate(vo.getOrdered_paystate());
		ovo.setOrdered_to_adr(vo.getOrdered_to_adr());
		ovo.setOrdered_to_email(vo.getOrdered_to_email());
		ovo.setOrdered_to_name(vo.getOrdered_to_name());
		ovo.setOrdered_to_post(vo.getOrdered_to_post());
		ovo.setOrdered_to_tel(vo.getOrdered_to_tel());
		ovo.setIdx(loginUser.getIdx());
		this.orderedService.insertOrder(ovo);
		/////////////////////////////////////////////////
		//값비교후 참일떄
		List<ProductVO> orderList=(List<ProductVO>) session.getAttribute("orderList");
		log.info("sssssssssssssssssssssssss"+orderList.get(0).getPnum());
		int n=1;
		for(ProductVO prodVO: orderList) {
			//값저장......	
			vo.setPnum_fk(prodVO.getPnum());
			vo.setPname(prodVO.getPname());
			vo.setOqty(prodVO.getPqty());
			vo.setPrice(prodVO.getPrice());
			vo.setSaleprice(prodVO.getSaleprice());
			vo.setPimage(prodVO.getPimage1());
			vo.setPcompany(prodVO.getPcompany());
			vo.setTotalPoint(prodVO.getTotalPoint());
			vo.setTotalPrice(prodVO.getTotalPrice());
			vo.setIdx_fk(loginUser.getIdx());			
			this.orderedService.insertOrdered(vo);
			log.info(n+"번재 입력된 vo===========>"+vo);
			n++;
		}
		
		return vo;
	}